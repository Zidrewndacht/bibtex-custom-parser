You are an expert tasked with verifying if the automated classification of a research paper is accurate based on its content.

Below is the data for a paper and its corresponding LLM-generated classification. Your job is to determine if the classification accurately reflects the information in the paper's title, abstract, and keywords.

Instructions:
1.  Read the paper content carefully.
2.  Compare the automated classification against the paper content.
3.  Determine if the classification is a faithful representation of the paper.
4.  Respond ONLY with a JSON object containing two fields:
    - `verified`: `true` if the classification is largely correct, `false` if it contains significant errors or misrepresentations, `null` if there's not enough data for a decision, you are unsure or cannot determine the accuracy.
    - `estimated_score`: An integer between 0 and 10 representing a finer-grained score for how accurate the automated classification was compared to the actual paper data. 0 for completelly inaccurate, 10 for completely accurate, or any integer inbetween.

Example Response Format (only output the JSON):
{{
  "verified": true,
  "estimated_score": 7
}}

These are the requirements for the original classification you'll be verifying:

research_area: null #broad area: electrical engineering, computer sciences, medical, finances, etc, can be inferred by journal or conference name as well as abstract contents.
is_offtopic: null #We are looking for PCB automated defect detection papers. Set this field to true if paper seems unrelated to *implementations of automated defect detection on electronic printed circuit boards*. If the paper talks about anything else entirely, set as offtopic. If the paper talks about defect detection in other areas instead of electronics manufacturing, it's also offtopic. When offtopic, answer null for all fields following this one. Only set this to false if at least one feature from the 'features' list below (including "other") can be set to true.
is_survey: null #true for survey/review/etc., false for implementations, new research, etc.
is_through_hole: null #true for papers that specify PTH, THT, etc., through-hole component mounting.
is_smt: null #true for papers that specify surface-mount component mounting (SMD, SMT).
is_x_ray: null  #true for X-ray inspection, false for standard optical (visible light) inspection.
features:  # true, false, null for unknown/unclear. Identify the types of defect which are detected by the implementation(s) described in the paper.
    solder: null
    polarity: null
    wrong_component: null
    missing_component: null
    tracks: null	#any track error detection: split, short, etc.
    holes: null
    other: null 	#"string with other types of error detection"
technique: # 
    classic_computer_graphics_based: null # for general pattern recognition techniques that do not leverage machine learning
    machine_learning_based: null
    hybrid: null
    model: "name"	#comma-separated list if multiple models are used (YOLO, ResNet, DETR, etc.), null if not ML, "in-house" if unnamed ML model is developed in the paper itself.
available_dataset: null #true if authors explicitly provide the datasets for the public, false if there's no dataset usage (e.g. for techniques not depending on a dataset) or if the dataset used is not provided to the public.

Here is the Paper Content (real data):
Title: {title}
Abstract: {abstract}
Keywords: {keywords}
Authors: {authors}
Publication Year: {year}
Publication Type: {type}
Publication Name: {journal}

Automated Classification to Verify (inferred by a language model):
research_area: {research_area}
is_offtopic: {is_offtopic}
is_survey: {is_survey}
is_through_hole: {is_through_hole}
is_smt: {is_smt}
is_x_ray: {is_x_ray}
features:
{features}
technique:
{technique}

Your response is not being read by a human, it goes directly to an automated parser. After thinking through the request in <think></think> tags, output only the result in JSON format in plaintext without any other tags like ```json or similar.