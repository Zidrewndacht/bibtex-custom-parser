/* static/style.css */

body {
    font-family: "Inter Tight", Arial, sans-serif;
    margin: 4px;
    background-color: #f5f7fa; 
    color: #393939;
}

html.busyCursor,
html.busyCursor * {
    cursor: wait !important;
}
/* Ensure the table container allows internal scrolling for the sticky footer */
 .table-container { 
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.25);
    border: 1px solid #2f6f72;
    overflow-y: auto; /* Allow vertical scrolling if needed */
    max-height: calc(100vh - 10px); /* Example: limit height to 95% of viewport height */
    position: relative; /* Needed for sticky positioning within */
    border-radius: 8px;
}

table {
    border-collapse: collapse;
    width: 100%;
    background-color: #fff;
    min-width: 1660px;
    border-radius: 6px;
}

td {
    padding: 8px; 
    min-width: 25px;
    /*! text-align: justify; */
}

/* --- Rotated Header Styles --- */
th.rotate-header {
    white-space: nowrap;
    padding: 0; 
}
th.rotate-header > div {
    transform: rotate(-90deg) translateX(-40px); 
    width: 30px; 
    margin: 60px 0; 
}
th.rotate-header > div > span {
    display: block;
    text-align: center;
}

th {
    vertical-align: bottom; 
    background-color: #427982; 
    color: white;
    position: sticky;
    top:0;
    font-weight: bold;
    box-shadow: inset 0 -0px 0px 1px #115e5a66;
    padding: 8px;
    text-align: left;
    min-width: 29px;
    z-index: 999;
    font-size: 9.5pt;
}

th[data-sort]:hover {    
    filter: contrast(1.25) brightness(0.9); 
    cursor: pointer; 
}

/* tr:nth-child(4n+1) {    background-color: #0000000a; } */
/* tr:nth-child(4n+2) {    background-color: #0000000a;} */

/* Add new classes for alternating shades */
.alt-shade-1 {
    background-color: #0000000a; /* Light grey */
}

.alt-shade-2 {
    background-color: #ffffff; /* White (or your default row color) */
}

.detail-row {
    display: table-row;
    /* background-color: #ffffff; */
    padding: 0; 
}
.secondary-text-cell {
    font-size: 10pt;
    font-family: "Arial Narrow";
    /*! text-align: justify; */
}
.detail-content {
    /*! margin: 10px auto; */
    text-align: justify;
}

.toggle-btn {
    cursor: pointer;
    text-decoration: none;
    color: #000b;
    background: linear-gradient(180deg, hsl(210, 20%, 83%) 0%, hsl(210, 25%, 92%) 100%);
    border: 1px solid #0004;
    font-size: 9.5pt;
    font-weight: 400;
    border-top: 0;
    transition: 0.33s all ease-in-out;
    text-align: center;
}

.toggle-btn:hover {
    transition: 0.5s all ease-in-out; /* Teal on hover */
    filter: saturate(200%) contrast(110% );
}

.sort-indicator {
    position: absolute;
    right: 8px;
    top: 50%;
    transform: translateY(-50%);
    font-size: 0.9em;
}

.editable {
    padding: 4px;
    border-radius: 3px;
    /*! min-width: 150px; */
    transition: border-color 0.3s, box-shadow 0.3s;
}

.editable:focus {
    border: 1px solid #3498db;
    outline: none;
    box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.2);
}

select, input[type="text"] {
    width: calc(100% - 12px);
    box-sizing: border-box;
    padding: 6px;
    border: 1px solid #ccc;
    border-radius: 4px;
    font-family: inherit; 
}

input[type="search"] {
    width: calc(100% - 0px);
    box-sizing: border-box;
    padding: 8px;
    border: 1px solid #fff4;
    font-family: inherit; 
    height: 48px;
    font-size: 11pt;
    font-style: italic;
    margin: 0px;
    color: white; /* Ensure color is explicitly set */
    background: #fff2; /* Ensure background is explicitly set */
    /* Add these vendor-prefixed properties to override Chromium defaults */
    -webkit-text-fill-color: white; /* Ensures text color inside the input */
    -webkit-opacity: 1; /* Override any potential opacity issues */
    opacity: 0.66;
    border-radius: 4px;
    transition: 0.25s all ease;
}
input[type="search"]:hover, input[type="search"]:focus  {
    opacity: 1;
    transition: 0.25s all ease;
}

/* Remove default Chromium search styling */
input[type="search"]::-webkit-search-decoration,
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-results-button,
input[type="search"]::-webkit-search-results-decoration {
    -webkit-appearance: none; /* Removes default icons/buttons */
}

/* Ensure placeholder text is also styled correctly */
input[type="search"]::placeholder {
    color: rgba(255, 255, 255, 0.7); /* Adjust opacity as needed */
    opacity: 1; /* Override default opacity */
}
input[type="search"]::-webkit-input-placeholder { /* For older Webkit */
    color: rgba(255, 255, 255, 0.7);
    opacity: 1;
}
.filter-item input[type="number"] {
    height: 28px;
    width: 40px;
    background: transparent;
    color: #444;
    font-size: 10.5pt;
    border: none;
    padding: 4px 4px;
    margin: 0 6px;
    transition: 0.25s all ease;
}


.filter-item input[type="number"]:hover {
    background: white;
    /*! border: 1px solid #ccc; */ /* Add border */
    border-radius: 3px; /* Rounded corners */
    transition: 0.25s all ease;
}

.action-btn {
    margin: 0 2px;
    padding: 10px 20px;
    background-color: #427982; 
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 1em;
    transition: all 0.1s ease;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    min-width: 175px;
}

.action-btn:hover {
    filter: contrast(1.2) brightness(1.2);
    box-shadow: 0 3px 5px rgba(0, 0, 0, 0.15);
    transition: all 0.3s ease;
}

.action-btn:active {
    transform: translateY(1px); 
    filter: contrast(1.2) brightness(0.8);
    transition: all 0.1s ease;
}

.action-btn:disabled {
    opacity: 0.5;
}

.action-btn:disabled:hover {
    filter: unset;
    transform: unset;
}

.action-btn:disabled:active {
    filter: unset;
}
.edit-section {
    margin-top: 15px;
    padding-top: 15px;
}

form label {
    display: block;
    /*! margin-bottom: 5px; */
    font-weight: bold;
    line-height: 2em;
}
form input[type="text"] {
    margin-bottom: 10px;
}

.changed-cell, .changed-by-cell {
    font-size: 0.9em; 
    color: #7f8c8d; 
}

.status-cell{
    text-align: center;
    font-size: 1.5em;
    padding: 4px;  
    width: 25px;   
}


.editable-status, .editable-verify {
    cursor: pointer; 
    transition: background-color 0.2s, transform 0.1s; 
    border-radius: 3px; 
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
    -webkit-user-select: none; /* Prevent text selection */
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}
.editable-status:hover, .editable-verify:hover  {
    background-color: #d6eaf8; 
    transform: scale(1.1);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}
.editable-status:active, .editable-verify:active  {
    transform: scale(0.95); 
    background-color: #aed6f1; 
}
.detail-flex-container {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.25s ease-in-out, opacity 0.3s ease-in-out;
    
    display: grid;
    grid-template-columns: 1fr 1fr 570px;
    grid-template-rows: auto; 
    
    gap: 12px; 
    box-sizing: border-box;
    width: 100%;
    padding: 0 0 0 10px;
    margin: 0;
}

.detail-row.expanded .detail-flex-container {
    max-height: 3000px; 
    opacity: 1;
    transition: max-height 0.5s ease-in-out, opacity 0.4s ease-in-out;
    border-bottom: 1px solid #e0e0e0; 
}

.detail-content, .detail-edit {
    min-width: 0; 
    /*! padding: 10px; */
    box-sizing: border-box;
}

.detail-content p, .detail-edit p{
    text-align: justify; 
    white-space: normal;
    margin-bottom: 0.5em; 
}
.detail-row > td {
    padding: 0;
}

.detail-content, .detail-edit {
    min-width: 0;
    box-sizing: border-box;
    padding: 4px;
}

.detail-edit{
    grid-column: 3/4;
    grid-row: 1/3;
}
.detail-content p, .detail-edit p {
    text-align: justify;
    white-space: normal;
    margin-bottom: 0.5em;
    line-height: 1.3em;
}

.detail-edit input[type="text"] {
    width: 100%;
    /*! min-width: 150px; */
    box-sizing: border-box;
    padding: 6px;
    border: 1px solid #bbb;
    border-radius: 5px;
    font-family: inherit;
    font-size: 1em;
}
.save-btn {
    background-color: #27ae60;
    width: 170px;
    font-weight: bold;
}

#classify-remaining-btn, #classify-all-btn, .classify-btn {
    background: hsl(246, 22%, 44%);
}

#verify-all-btn, #verify-remaining-btn, .verify-btn {
    background: hsl(309, 22%, 44%);
}

#verify-all-btn strong, #classify-all-btn strong {
    text-decoration: underline;
}

a {
    text-decoration: none;
    color: #227
}


th.inferred-header {
    background-color: hsl(167, 22%, 44%);
    box-shadow: inset 0 -0px 0px 1px #21504466;
}

/* --- Filter Item Styles --- */

.filter-item {
    display: inline-flex; /* Use flexbox for better alignment control */
    align-items: center;  /* Align items vertically in the center */
    white-space: nowrap;  /* Prevent wrapping within a single filter item */
    /* Add padding if needed for internal spacing */
    padding: 5px;
    font-size: 11pt;
}

/* Optional: Adjust vertical alignment of the checkbox itself if needed */
.filter-item input[type="checkbox"] {
    /* transform: translateY(16px); */ /* You might be able to reduce or remove this */
    margin-right: 5px; /* Add a small space between checkbox and label */
    /* Adjust height/width if necessary, or remove the large height if it causes misalignment */
    width: 36px;
    height: 36px;
    opacity: 0.5;
}
.filter-item input[type="checkbox"]:checked {
    opacity: 1;
/*     filter: invert() hue-rotate(120deg); */
    filter: hue-rotate(-40deg);
}

/* Optional: Adjust label alignment if needed */
.filter-item label {
    margin-bottom: 0; /* Override any default margin-bottom on labels */
    /* line-height can help align text with the checkbox if needed */
    /* line-height: 1.5; */
}


/* --- Add this rule for filtering --- */
tr.filter-hidden {
    display: none;
}
/* --- End of new rule --- */


/* --- Sticky Footer Styles --- */
#counts-footer {
    position: sticky;
    bottom: 0;
    z-index: 998; /* Below header */
    border-radius: 6px;
}

#counts-footer tr {
    background-color: #427982; /* Match header background */
    color: white;
    font-weight: bold;
}

#counts-footer td {
    padding: 8px;
    text-align: center; /* Center the counts */
    box-shadow: inset 0 0px 0px 1px #115e5a66; /* Match header border */
    font-size: 9.5pt;
    min-width: 29px; /* Match header min-width */
}


/* --- Styles for Reasoning Traces --- */

/* Container for the trace content within the detail row */
.trace-content {
    /* Preserves whitespace and line breaks like <pre> */
    white-space: pre-wrap;
    /* Allows long lines to wrap within the container */
    word-wrap: break-word; /* For older browser support, though word-break is often sufficient now */
    word-break: break-word; /* Breaks long words if necessary to fit container width */
    padding: 8px 12px;
    border: 1px solid #dadada;
    background-color: #f9f9f9;
    border-radius: 5px;
    height: 300px;
    overflow-y: auto;
    overflow-x: hidden;
    margin: 6px 0 10px 0;
    font-size: 10.5pt;
}

/* Ensures the trace container gets enough space in the flex/grid layout */
.detail-evaluator-trace,
.detail-verifier-trace {
    /* You might adjust flex-basis or width if needed, e.g., flex-basis: 100%; */
    /* For grid, you might need grid-column: span X; depending on your grid setup */
    /* Let's assume the parent flex container handles wrapping adequately for now */
    /* If traces need more specific sizing, add it here */
    flex-basis: 100%; /* Forces full width on new line(s) within flex container, adjust if needed */
    min-width: 100%; /* Allows the content to shrink below its intrinsic width if necessary */
}

/* --- New Main Header Styles --- */
.main-header {
    /*! width: calc(100% - 30px); */
    display: grid;
    grid-template-columns: min-content 1fr auto; /* Title, Filters, Controls */
    grid-template-rows: auto; /* Single row */
    gap: 20px; /* Space between items */
    align-items: center; /* Align items vertically */
    /*! padding: 0px 15px; */
    background-color: #e0e6ed; /* Example background */
    /* border: 1px solid #c0cacc; Example border */
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    min-width: 1660px;
}

.header-title h2 {
    margin: 0; /* Remove default margin */
    color: #2c3e50; /* Example text color */
    font-size: 1.5em; /* Adjust title size if needed */
}

.header-filters {
    display: flex;
    flex-wrap: wrap; /* Allow items to wrap if needed */
    gap: 15px; /* Space between filter items */
    align-items: center; /* Align items vertically */
    /* Optional: justify-content: center; or space-between; */
}

.filter-item {
    display: inline-flex; /* Keep flex for alignment */
    align-items: center;  /* Align items vertically */
    white-space: nowrap;  /* Prevent wrapping within a single filter item */
    padding: 5px; /* Keep padding */
    font-size: 11pt; /* Keep font size */
    /* background: #f0f0f0; */ /* Optional background for filter items */
    /* border-radius: 4px; */ /* Optional rounded corners */
}

#batch-status-message {
    font-size: 9.5pt;
}




.header-controls{
    margin: 0 4px;
}







/* --- ONLY Modifications within .detail-edit using Grid --- */

/* Ensure the edit section itself can participate in layout correctly */
/* It's already positioned by the parent grid, so focus on internal layout */
.detail-edit {
    /* Make .detail-edit itself a grid container for its direct children (form) */
    /* Or, make the form the grid container. Let's do that for cleaner structure. */
    /* Ensure it takes the height allocated by the parent grid */
    display: grid; /* Make it a grid if needed, but content dictates size */
    height: 100%; /* Take full height of its grid cell */
    padding: 0 12px 12px 0;
    box-sizing: border-box;
}

/* --- Make the form the Grid Container --- */
.detail-edit form {
    display: grid;
    /* Define explicit columns for the inputs/areas */
    /* Two columns for the first row (Research Area, Model Name) */
    /* One column for the full-width items below (Other, Page Count, Comments) */
    /* One row for the top inputs, one for the expanding comments, one for buttons */
    grid-template-columns: 1fr  1fr 1fr 90px; /* Two equal flexible columns */
    grid-template-rows: auto auto 1fr auto; /* Rows: labels, labels, textarea, buttons */
    gap: 10px; /* Consistent gap between grid items */
    height: calc(100% - 16px); /* Fill the .detail-edit area */
}

/* --- Place Research Area and Model Name on the first grid line --- */
/* Target the first two labels directly */
.detail-edit form > label:nth-of-type(1) { /* Research Area */
    grid-column: 1 / 3;
    grid-row: 1 / 2;
}
.detail-edit form > label:nth-of-type(2) { /* Model Name */
    grid-column: 3 / 5;
    grid-row: 1 / 2;
}

/* --- Ensure inputs within these labels expand to fill their grid cells --- */
.detail-edit form > label:nth-of-type(1) > input[type="text"],
.detail-edit form > label:nth-of-type(2) > input[type="text"] {
    width: 100%; /* Expand to fill the label container */
    box-sizing: border-box;
}

/* --- Place Other Defects and Page Count on the second grid line --- */
.detail-edit form > label:nth-of-type(3) { /* Other Defects */
    grid-column: 1 / 4;
    grid-row: 2 / 3;
}
.detail-edit form > label:nth-of-type(4) { /* Page Count */
    grid-column: 4 / 5;
    grid-row: 2 / 3;
}
/* Ensure inputs for these expand */
.detail-edit form > label:nth-of-type(3) > input[type="text"],
.detail-edit form > label:nth-of-type(4) > input[type="text"] {
    width: 100%;
    box-sizing: border-box;
}


/* --- Make User Comments Textarea Expand --- */
/* Target the label containing the textarea */
.detail-edit form > label:nth-of-type(5) { /* Assuming 'User comments:' is the 5th label */
    /* Span both columns */
    grid-column: 1 / -1; /* From column 1 to the end */
    /* Place it in the row designed for the expanding content */
    grid-row: 3 / 4;
    /* Make this label itself a flex column to manage the textarea inside */
    display: flex;
    flex-direction: column;
}
/* Make the textarea itself expand to fill the label's grid cell */
.detail-edit form textarea.editable {
    /* flex-grow: 1; /* Expand within the flex label */
    width: 100%;
    min-width: 100%;
    /* Make the textarea fill the label's grid cell */
    height: 100%; /* Use 100% height managed by grid/flex parent */
    box-sizing: border-box;
    /* Remove any fixed height from global styles if conflicting */
    /* height: auto; /* Let grid handle height */
    min-height: 150px; /* Optional: Set a minimum height */
    border-radius: 5px;
    display: block;
    resize: none;
    /*resize: vertical; /* Allow user to resize vertically if needed */
    border: 1px solid #bbb;
}

.detail-edit form > .row-actions {
    /* Span both columns */
    grid-column: 1 / -1;
    /* Place it in the last row */
    grid-row: 4 / 5;
    /* Optional: Align buttons */
    text-align: left; /* Or use flexbox/grid inside .row-actions for button layout */
    display: flex;
    align-content: space-around;
    justify-content: space-between;
}

.number-cell {
    text-align: center;
}